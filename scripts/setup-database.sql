-- Create database
CREATE DATABASE IF NOT EXISTS movie_db;
USE movie_db;

-- Create movies table
CREATE TABLE IF NOT EXISTS movies (
  id INT AUTO_INCREMENT PRIMARY KEY,
  title VARCHAR(255) NOT NULL,
  year INT NOT NULL,
  status ENUM('watched', 'unwatched') NOT NULL DEFAULT 'unwatched',
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- Movies table
create table if not exists public.movies (
	id bigint generated by default as identity primary key,
	title text not null,
	year int not null check (year >= 1900 and year <= extract(year from now())::int + 5),
	status text not null check (status in ('watched','unwatched')),
	inserted_at timestamptz not null default now()
);

-- RLS
alter table public.movies enable row level security;

-- Public read/write for demo (adjust as needed)
create policy "public can read movies" on public.movies for select using (true);
create policy "public can insert movies" on public.movies for insert with check (true);
create policy "public can update movies" on public.movies for update using (true);
create policy "public can delete movies" on public.movies for delete using (true);

-- Insert sample data
INSERT INTO movies (title, year, status) VALUES
('The Matrix', 1999, 'watched'),
('Inception', 2010, 'unwatched'),
('The Dark Knight', 2008, 'watched'),
('Interstellar', 2014, 'unwatched'),
('Pulp Fiction', 1994, 'watched');
